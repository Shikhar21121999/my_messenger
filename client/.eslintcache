[{"D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\index.js":"1","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\App.js":"2","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\Login.js":"3","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\hooks\\useLocalStorage.js":"4","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\Dashboard.js":"5","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\Sidebar.js":"6","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\Conversations.js":"7","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\Contacts.js":"8","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\NewContactModel.js":"9","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\NewConversationModel.js":"10","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\Context\\ContactsProvider.js":"11","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\Context\\ConversationProvider.js":"12","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\OpenConversation.js":"13"},{"size":256,"mtime":1609454160063,"results":"14","hashOfConfig":"15"},{"size":803,"mtime":1609968928776,"results":"16","hashOfConfig":"15"},{"size":1264,"mtime":1609877790918,"results":"17","hashOfConfig":"15"},{"size":1552,"mtime":1611477042162,"results":"18","hashOfConfig":"15"},{"size":761,"mtime":1611516546272,"results":"19","hashOfConfig":"15"},{"size":2308,"mtime":1609878540783,"results":"20","hashOfConfig":"15"},{"size":1018,"mtime":1611504502120,"results":"21","hashOfConfig":"15"},{"size":561,"mtime":1611504555464,"results":"22","hashOfConfig":"15"},{"size":1439,"mtime":1611479429339,"results":"23","hashOfConfig":"15"},{"size":2610,"mtime":1610133652208,"results":"24","hashOfConfig":"15"},{"size":769,"mtime":1609880477532,"results":"25","hashOfConfig":"15"},{"size":3270,"mtime":1611516331348,"results":"26","hashOfConfig":"15"},{"size":1842,"mtime":1611518950344,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"b3et02",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\index.js",[],["59","60"],"D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\App.js",[],"D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\Login.js",[],"D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\hooks\\useLocalStorage.js",[],"D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\Dashboard.js",[],"D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\Sidebar.js",["61"],"import React , {useState,useContext} from 'react';\r\n\r\nimport {Tab, Nav, Button,Modal} from 'react-bootstrap';\r\nimport Conversations from './Conversations.js';\r\nimport Contacts from './Contacts.js';\r\nimport NewContactModel from './NewContactModel.js';\r\nimport NewConversationModel from './NewConversationModel.js';\r\n\r\nconst CONVERSATIONS_KEY='conversation'\r\nconst CONTACTS_KEY='contacts'\r\n\r\n\r\nconst Sidebar = ({id}) => {\r\n\r\n    const [activeKey,setActiveKey]=useState(CONVERSATIONS_KEY)\r\n    const conversationsOpen = activeKey === CONVERSATIONS_KEY\r\n    const [show,setShow]=useState(false)\r\n    \r\n\r\n    const closeModal=() =>{\r\n        setShow(false)\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '250px' }} className=\"d-flex flex-column\">\r\n            <Tab.Container activeKey={activeKey} onSelect={setActiveKey}>\r\n                <Nav variant=\"tabs\" className=\"justify-content-center\">\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey={CONVERSATIONS_KEY}>Conversations</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey={CONTACTS_KEY}>Contacts</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n                <Tab.Content className=\"border-right overflow-auto flex-grow-1\">\r\n                    <Tab.Pane eventKey={CONVERSATIONS_KEY}>\r\n                        <Conversations />\r\n                    </Tab.Pane>\r\n                    <Tab.Pane eventKey={CONTACTS_KEY}>\r\n                        <Contacts />\r\n                    </Tab.Pane>\r\n                </Tab.Content>\r\n                <div className=\"p-2 border-top border-right small\">\r\n                    Your Id: <span className=\"text-muted\">{id}</span>\r\n                </div>\r\n                <Button onClick={() => setShow(true)} className=\"rounded-0\">\r\n                    New {conversationsOpen ? 'Conversation' : 'Contact'}\r\n                </Button>\r\n            </Tab.Container>\r\n            <Modal show={show} onHide={closeModal}>\r\n                    {conversationsOpen ?\r\n                        <NewConversationModel closeModal={closeModal}/> :\r\n                        <NewContactModel closeModal={closeModal}/>  \r\n                    }\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\Conversations.js",["62"],"import React from 'react';\r\nimport {ListGroup} from 'react-bootstrap'\r\nimport { useContacts } from '../Context/ContactsProvider';\r\nimport {useConversation} from '../Context/ConversationProvider'\r\nconst Conversations = () => {\r\n    /*\r\n    This component is used to render out conversation list\r\n    this is also used to make a conversation selected\r\n    */\r\n    const {frmetd_cov_lis,setSelectedConversationIndex,selectedConversationIndex} = useConversation();\r\n    console.log(frmetd_cov_lis)\r\n    console.log(selectedConversationIndex)\r\n\r\n    return (\r\n        <ListGroup>\r\n            {frmetd_cov_lis.map((conversation,index) => \r\n            <ListGroup.Item variant=\"flush\" action \r\n            active={conversation.isSelected}\r\n            onClick={() => setSelectedConversationIndex(index)}\r\n            key={index}\r\n            >\r\n            {conversation.recipients.map(r => r.name).join(', ')}\r\n            </ListGroup.Item>\r\n            )}\r\n        </ListGroup>\r\n    );\r\n}\r\n\r\nexport default Conversations;\r\n","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\Contacts.js",[],"D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\NewContactModel.js",["63","64"],"import React , {useState,useRef,useContext} from 'react';\r\nimport {Modal, Button,Form} from 'react-bootstrap';\r\nimport {useContacts} from '../Context/ContactsProvider'\r\n\r\nconst NewContactModel = ({closeModal}) => {\r\n    // this is a functional component which is used\r\n    // to render out a Model and in turn is used to create a contact\r\n\r\n    function handleSubmit(e) {\r\n        // function to create a new contact and then close the model\r\n        e.preventDefault();\r\n        createContact(idRef.current.value,nameRef.current.value);\r\n        closeModal();\r\n\r\n        // create contact\r\n    }\r\n\r\n    const idRef=useRef()\r\n    const nameRef=useRef()\r\n    const {createContact} =useContacts()\r\n\r\n    return (\r\n        <>\r\n            <Modal.Header closeButton>Contact</Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>ID</Form.Label>\r\n                        <Form.Control ref={idRef} type=\"text\" ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control ref={nameRef} type=\"text\" ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" >Submit</Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NewContactModel;\r\n","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\NewConversationModel.js",["65"],"import React, { useRef , useState} from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport {useContacts} from '../Context/ContactsProvider'\r\nimport {useConversation} from '../Context/ConversationProvider'\r\nconst NewConversationModel = ({ closeModal }) => {\r\n\r\n    const [selectedContactIds, setSelectedContactIds] = useState([])\r\n    // this represents the state of conversation\r\n    // that is the conversation is represented as the contactids selected\r\n    const {contact_lis} = useContacts();\r\n    const {createConversation} = useConversation();\r\n    \r\n    function handleSubmit(e) {\r\n        // function to submit the form \r\n        // to create a new conversation\r\n        e.preventDefault();\r\n        // console.log(\"submitted\");\r\n        // call to create a new conversation\r\n        // out of currently selected contact ids\r\n        createConversation(selectedContactIds);\r\n        closeModal();\r\n    }\r\n\r\n    function handelcheckboxChange(contanctID){\r\n        // This function is called whenever a id \r\n        // is included or removed from current conversation\r\n        // hence we need to make changes to state of conversation\r\n        // to reflect those changes\r\n        setSelectedContactIds(prevSelectedContactIds=> {\r\n            if (prevSelectedContactIds.includes(contanctID)) {\r\n                // if it already includes then we have to remove it\r\n                return prevSelectedContactIds.filter(prev_id => {\r\n                    return prev_id !==contanctID\r\n                })\r\n            }\r\n            // else we need to just include it\r\n            else\r\n            {\r\n                return [...prevSelectedContactIds,contanctID];\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal.Header closeButton>Create Conversation</Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                    {contact_lis.map(contact =>(\r\n                        <Form.Group controlId={contact.id} key={contact.id} >\r\n                            <Form.Check \r\n                                type=\"checkbox\" \r\n                                label={contact.name}\r\n                                value={selectedContactIds.includes(contact.id)}\r\n                                onChange={() => handelcheckboxChange(contact.id)}\r\n                            />\r\n                        </Form.Group> \r\n                    ))}\r\n                    <Button type=\"submit\" >Submit</Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NewConversationModel;\r\n","D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\Context\\ContactsProvider.js",[],"D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\Context\\ConversationProvider.js",[],"D:\\Projects\\Web development\\Js based projects\\my_messenger\\client\\src\\components\\OpenConversation.js",["66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":26,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"75","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":21},{"ruleId":"71","severity":1,"message":"76","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":1,"column":33,"nodeType":"73","messageId":"74","endLine":1,"endColumn":43},{"ruleId":"71","severity":1,"message":"77","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":23},{"ruleId":"71","severity":1,"message":"78","line":3,"column":9,"nodeType":"73","messageId":"74","endLine":3,"endColumn":18},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useContacts' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'ListGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]